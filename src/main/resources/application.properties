kafka.bootstrap.servers=${BOOTSTRAP_SERVERS}
kafka.security.protocol=SASL_SSL
kafka.sasl.mechanism=OAUTHBEARER
kafka.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
  oauth.client.id="${USER}" \
  oauth.client.secret="${PASSWORD}" \
  oauth.token.endpoint.uri="https://keycloak-edge-redhat-rhoam-user-sso.apps.mas-sso-stage.1gzl.s1.devshift.org/auth/realms/mas-sso-staging/protocol/openid-connect/token" ;
kafka.sasl.login.callback.handler.class=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler

quarkus.kafka-streams.topics=stock-levels,reserved-stock

quarkus.kafka-streams.security.protocol=SASL_SSL
quarkus.kafka-streams.sasl.mechanism=OAUTHBEARER
quarkus.kafka-streams.sasl.jaas-config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
  oauth.client.id="${USER}" \
  oauth.client.secret="${PASSWORD}" \
  oauth.token.endpoint.uri="https://keycloak-edge-redhat-rhoam-user-sso.apps.mas-sso-stage.1gzl.s1.devshift.org/auth/realms/mas-sso-staging/protocol/openid-connect/token" ;
quarkus.kafka-streams.sasl.login.callback.handler.class=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler

# Quick reconnection for dev mode
kafka-streams.consumer.heartbeat.interval.ms=200
kafka-streams.reconnect.backoff.max.ms=30000